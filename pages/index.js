import React, { useState, useEffect } from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { format } from "date-fns";

export default function Home() {
  const [allInvoices, setAllInvoices] = useState([]);
  const [mounted, setMounted] = useState(false);

  const getInvoices = async () => {
    const response = await fetch(`/api/get-invoices`);

    if (!response.ok) {
      throw new Error(`Error: ${response.status}`);
    }

    const data = await response.json();

    console.log("The data is ", data.invoiceInfo);
    setAllInvoices(data.invoiceInfo);
  };

  useEffect(() => {
    getInvoices();
    setMounted(true);
  }, []);

  if (!mounted) return;
  return (
    <div className="w-full flex flex-col min-h-screen">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="flex w-full bg-neutral-900 h-20">
        <div className="container flex flex-col mx-auto h-full items-center justify-center">
          <p className="text-sm uppercase tracking-wider font-bold text-white">
            Spotlight Media
          </p>
          <p className="text-2xl font-extrabold text-white">Invoice Tracker</p>
        </div>
      </header>

      <main className="flex flex-1 bg-slate-100 flex-col">
        <section className="container mx-auto flex flex-col py-12">
          <article className="flex w-full items-center">
            <h1 className="text-4xl">All Invoices</h1>
            <div className="ml-auto w-40 px-2 py-10 bg-white rounded-lg shadow-sm flex flex-col">
              <p className="text-xs uppercase font-bold">Profit</p>
              <p></p>
            </div>
          </article>

          {/* Table Headers */}
          <article className="w-full flex p-2">
            <p className="font-bold text-xs w-1/6 uppercase">Date Created</p>
            <p className="font-bold text-xs w-1/6 uppercase">Client</p>
            <p className="font-bold text-xs w-1/6 uppercase">Total (Â£)</p>
            <p className="font-bold text-xs w-1/6 uppercase">Type</p>
            <p className="font-bold text-xs w-1/6 uppercase">URL</p>
            <p className="font-bold text-xs w-1/6 uppercase">Date Due</p>
            <p className="font-bold text-xs w-1/6 uppercase">Status</p>
          </article>

          {/* Loop through invoiceData */}
          <article className="w-full flex flex-col">
            {mounted &&
              allInvoices.map((invoice) => {
                return (
                  <article className=" bg-white p-2 shadow-sm rounded-md w-full flex mb-2">
                    <p className="text-xs w-1/6">
                      {format(new Date(invoice.date_created), "dd/MM/yyyy")}
                    </p>
                    <p className="text-xs w-1/6">{invoice.client}</p>
                    <p className="text-xs w-1/6">{invoice.total}</p>
                    <p className="text-xs w-1/6">
                      {" "}
                      {invoice.type[0].toUpperCase() +
                        invoice.type.substring(1)}
                    </p>
                    <p className="text-xs w-1/6">
                      <a
                        className="flex"
                        href={invoice.url}
                        target="_blank"
                        rel="noreferrer"
                      >
                        <svg
                          class="w-4 h-4"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                          ></path>
                        </svg>
                        Open in Google Sheets
                      </a>
                    </p>
                    <p className="text-xs w-1/6">
                      {format(new Date(invoice.date_due), "dd/MM/yyyy")}
                    </p>
                    <p className="text-xs w-1/6">
                      {invoice.status[0].toUpperCase() +
                        invoice.status.substring(1)}
                    </p>
                  </article>
                );
              })}
          </article>

          {mounted && allInvoices ? <p>{JSON.stringify(allInvoices)}</p> : null}

          <h2>dfdsfs</h2>

          <p>dfsdf</p>
        </section>
      </main>

      <footer className="flex">
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
